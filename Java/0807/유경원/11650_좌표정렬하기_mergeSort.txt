import java.io.*;
import java.util.*;

public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		
		int[][] arr = new int[N][2];
		for(int i=0;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			arr[i][0] = Integer.parseInt(st.nextToken());
			arr[i][1] = Integer.parseInt(st.nextToken());
		}
		
		mergeSort(arr,0,arr.length-1);
		
		for(int i=0;i<N;i++) {
			sb.append(arr[i][0]).append(" ").append(arr[i][1]).append("\n");
		}
		System.out.println(sb);
	}
	
	static void mergeSort(int[][] arr, int left, int right) {
		if(left>=right) return;
		
		int mid = (left+right)/2;
		mergeSort(arr,left,mid);
		mergeSort(arr,mid+1,right);
		merge(arr,left,mid,right);
	}
    
	static void merge(int[][] arr, int left, int mid, int right) {
		int[][] L = Arrays.copyOfRange(arr, left, mid+1);
		int[][] R = Arrays.copyOfRange(arr, mid+1, right+1);
		
		int i=0,j=0,k=left;
		int ll=L.length,rl=R.length;
		
		while(i<ll && j<rl) {
			if(L[i][0]<R[j][0]) {
				arr[k++] = L[i++];
			}else if(L[i][0]==R[j][0]) { // x좌표 같으면
				if(L[i][1]<R[j][1]) // y좌표 오름차순
					arr[k++] = L[i++];
				else
					arr[k++] = R[j++];
			}else {
				arr[k++] = R[j++];
			}
		}
		while(i<ll) {
			arr[k++] = L[i++];
		}
		while(j<rl) {
			arr[k++] = R[j++];
		}
	}
	
}